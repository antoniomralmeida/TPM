// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: constraint_solver/routing_parameters.proto

#ifndef PROTOBUF_constraint_5fsolver_2frouting_5fparameters_2eproto__INCLUDED
#define PROTOBUF_constraint_5fsolver_2frouting_5fparameters_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "constraint_solver/routing_enums.pb.h"
#include "constraint_solver/solver_parameters.pb.h"
// @@protoc_insertion_point(includes)

namespace operations_research {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_constraint_5fsolver_2frouting_5fparameters_2eproto();
void protobuf_AssignDesc_constraint_5fsolver_2frouting_5fparameters_2eproto();
void protobuf_ShutdownFile_constraint_5fsolver_2frouting_5fparameters_2eproto();

class RoutingModelParameters;
class RoutingSearchParameters;
class RoutingSearchParameters_LocalSearchNeighborhoodOperators;

// ===================================================================

class RoutingSearchParameters_LocalSearchNeighborhoodOperators : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators) */ {
 public:
  RoutingSearchParameters_LocalSearchNeighborhoodOperators();
  virtual ~RoutingSearchParameters_LocalSearchNeighborhoodOperators();

  RoutingSearchParameters_LocalSearchNeighborhoodOperators(const RoutingSearchParameters_LocalSearchNeighborhoodOperators& from);

  inline RoutingSearchParameters_LocalSearchNeighborhoodOperators& operator=(const RoutingSearchParameters_LocalSearchNeighborhoodOperators& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutingSearchParameters_LocalSearchNeighborhoodOperators& default_instance();

  void Swap(RoutingSearchParameters_LocalSearchNeighborhoodOperators* other);

  // implements Message ----------------------------------------------

  inline RoutingSearchParameters_LocalSearchNeighborhoodOperators* New() const { return New(NULL); }

  RoutingSearchParameters_LocalSearchNeighborhoodOperators* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoutingSearchParameters_LocalSearchNeighborhoodOperators& from);
  void MergeFrom(const RoutingSearchParameters_LocalSearchNeighborhoodOperators& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoutingSearchParameters_LocalSearchNeighborhoodOperators* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool use_relocate = 1;
  void clear_use_relocate();
  static const int kUseRelocateFieldNumber = 1;
  bool use_relocate() const;
  void set_use_relocate(bool value);

  // optional bool use_relocate_pair = 2;
  void clear_use_relocate_pair();
  static const int kUseRelocatePairFieldNumber = 2;
  bool use_relocate_pair() const;
  void set_use_relocate_pair(bool value);

  // optional bool use_relocate_neighbors = 3;
  void clear_use_relocate_neighbors();
  static const int kUseRelocateNeighborsFieldNumber = 3;
  bool use_relocate_neighbors() const;
  void set_use_relocate_neighbors(bool value);

  // optional bool use_exchange = 4;
  void clear_use_exchange();
  static const int kUseExchangeFieldNumber = 4;
  bool use_exchange() const;
  void set_use_exchange(bool value);

  // optional bool use_cross = 5;
  void clear_use_cross();
  static const int kUseCrossFieldNumber = 5;
  bool use_cross() const;
  void set_use_cross(bool value);

  // optional bool use_cross_exchange = 6;
  void clear_use_cross_exchange();
  static const int kUseCrossExchangeFieldNumber = 6;
  bool use_cross_exchange() const;
  void set_use_cross_exchange(bool value);

  // optional bool use_two_opt = 7;
  void clear_use_two_opt();
  static const int kUseTwoOptFieldNumber = 7;
  bool use_two_opt() const;
  void set_use_two_opt(bool value);

  // optional bool use_or_opt = 8;
  void clear_use_or_opt();
  static const int kUseOrOptFieldNumber = 8;
  bool use_or_opt() const;
  void set_use_or_opt(bool value);

  // optional bool use_lin_kernighan = 9;
  void clear_use_lin_kernighan();
  static const int kUseLinKernighanFieldNumber = 9;
  bool use_lin_kernighan() const;
  void set_use_lin_kernighan(bool value);

  // optional bool use_tsp_opt = 10;
  void clear_use_tsp_opt();
  static const int kUseTspOptFieldNumber = 10;
  bool use_tsp_opt() const;
  void set_use_tsp_opt(bool value);

  // optional bool use_make_active = 11;
  void clear_use_make_active();
  static const int kUseMakeActiveFieldNumber = 11;
  bool use_make_active() const;
  void set_use_make_active(bool value);

  // optional bool use_make_inactive = 12;
  void clear_use_make_inactive();
  static const int kUseMakeInactiveFieldNumber = 12;
  bool use_make_inactive() const;
  void set_use_make_inactive(bool value);

  // optional bool use_make_chain_inactive = 13;
  void clear_use_make_chain_inactive();
  static const int kUseMakeChainInactiveFieldNumber = 13;
  bool use_make_chain_inactive() const;
  void set_use_make_chain_inactive(bool value);

  // optional bool use_swap_active = 14;
  void clear_use_swap_active();
  static const int kUseSwapActiveFieldNumber = 14;
  bool use_swap_active() const;
  void set_use_swap_active(bool value);

  // optional bool use_extended_swap_active = 15;
  void clear_use_extended_swap_active();
  static const int kUseExtendedSwapActiveFieldNumber = 15;
  bool use_extended_swap_active() const;
  void set_use_extended_swap_active(bool value);

  // optional bool use_node_pair_swap_active = 20;
  void clear_use_node_pair_swap_active();
  static const int kUseNodePairSwapActiveFieldNumber = 20;
  bool use_node_pair_swap_active() const;
  void set_use_node_pair_swap_active(bool value);

  // optional bool use_path_lns = 16;
  void clear_use_path_lns();
  static const int kUsePathLnsFieldNumber = 16;
  bool use_path_lns() const;
  void set_use_path_lns(bool value);

  // optional bool use_full_path_lns = 17;
  void clear_use_full_path_lns();
  static const int kUseFullPathLnsFieldNumber = 17;
  bool use_full_path_lns() const;
  void set_use_full_path_lns(bool value);

  // optional bool use_tsp_lns = 18;
  void clear_use_tsp_lns();
  static const int kUseTspLnsFieldNumber = 18;
  bool use_tsp_lns() const;
  void set_use_tsp_lns(bool value);

  // optional bool use_inactive_lns = 19;
  void clear_use_inactive_lns();
  static const int kUseInactiveLnsFieldNumber = 19;
  bool use_inactive_lns() const;
  void set_use_inactive_lns(bool value);

  // @@protoc_insertion_point(class_scope:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool use_relocate_;
  bool use_relocate_pair_;
  bool use_relocate_neighbors_;
  bool use_exchange_;
  bool use_cross_;
  bool use_cross_exchange_;
  bool use_two_opt_;
  bool use_or_opt_;
  bool use_lin_kernighan_;
  bool use_tsp_opt_;
  bool use_make_active_;
  bool use_make_inactive_;
  bool use_make_chain_inactive_;
  bool use_swap_active_;
  bool use_extended_swap_active_;
  bool use_node_pair_swap_active_;
  bool use_path_lns_;
  bool use_full_path_lns_;
  bool use_tsp_lns_;
  bool use_inactive_lns_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_constraint_5fsolver_2frouting_5fparameters_2eproto();
  friend void protobuf_AssignDesc_constraint_5fsolver_2frouting_5fparameters_2eproto();
  friend void protobuf_ShutdownFile_constraint_5fsolver_2frouting_5fparameters_2eproto();

  void InitAsDefaultInstance();
  static RoutingSearchParameters_LocalSearchNeighborhoodOperators* default_instance_;
};
// -------------------------------------------------------------------

class RoutingSearchParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.RoutingSearchParameters) */ {
 public:
  RoutingSearchParameters();
  virtual ~RoutingSearchParameters();

  RoutingSearchParameters(const RoutingSearchParameters& from);

  inline RoutingSearchParameters& operator=(const RoutingSearchParameters& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutingSearchParameters& default_instance();

  void Swap(RoutingSearchParameters* other);

  // implements Message ----------------------------------------------

  inline RoutingSearchParameters* New() const { return New(NULL); }

  RoutingSearchParameters* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoutingSearchParameters& from);
  void MergeFrom(const RoutingSearchParameters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoutingSearchParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RoutingSearchParameters_LocalSearchNeighborhoodOperators LocalSearchNeighborhoodOperators;

  // accessors -------------------------------------------------------

  // optional .operations_research.FirstSolutionStrategy.Value first_solution_strategy = 1;
  void clear_first_solution_strategy();
  static const int kFirstSolutionStrategyFieldNumber = 1;
  ::operations_research::FirstSolutionStrategy_Value first_solution_strategy() const;
  void set_first_solution_strategy(::operations_research::FirstSolutionStrategy_Value value);

  // optional bool use_filtered_first_solution_strategy = 2;
  void clear_use_filtered_first_solution_strategy();
  static const int kUseFilteredFirstSolutionStrategyFieldNumber = 2;
  bool use_filtered_first_solution_strategy() const;
  void set_use_filtered_first_solution_strategy(bool value);

  // optional .operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators local_search_operators = 3;
  bool has_local_search_operators() const;
  void clear_local_search_operators();
  static const int kLocalSearchOperatorsFieldNumber = 3;
  const ::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators& local_search_operators() const;
  ::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators* mutable_local_search_operators();
  ::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators* release_local_search_operators();
  void set_allocated_local_search_operators(::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators* local_search_operators);

  // optional .operations_research.LocalSearchMetaheuristic.Value local_search_metaheuristic = 4;
  void clear_local_search_metaheuristic();
  static const int kLocalSearchMetaheuristicFieldNumber = 4;
  ::operations_research::LocalSearchMetaheuristic_Value local_search_metaheuristic() const;
  void set_local_search_metaheuristic(::operations_research::LocalSearchMetaheuristic_Value value);

  // optional double guided_local_search_lambda_coefficient = 5;
  void clear_guided_local_search_lambda_coefficient();
  static const int kGuidedLocalSearchLambdaCoefficientFieldNumber = 5;
  double guided_local_search_lambda_coefficient() const;
  void set_guided_local_search_lambda_coefficient(double value);

  // optional bool use_depth_first_search = 6;
  void clear_use_depth_first_search();
  static const int kUseDepthFirstSearchFieldNumber = 6;
  bool use_depth_first_search() const;
  void set_use_depth_first_search(bool value);

  // optional int64 optimization_step = 7;
  void clear_optimization_step();
  static const int kOptimizationStepFieldNumber = 7;
  ::google::protobuf::int64 optimization_step() const;
  void set_optimization_step(::google::protobuf::int64 value);

  // optional int64 solution_limit = 8;
  void clear_solution_limit();
  static const int kSolutionLimitFieldNumber = 8;
  ::google::protobuf::int64 solution_limit() const;
  void set_solution_limit(::google::protobuf::int64 value);

  // optional int64 time_limit_ms = 9;
  void clear_time_limit_ms();
  static const int kTimeLimitMsFieldNumber = 9;
  ::google::protobuf::int64 time_limit_ms() const;
  void set_time_limit_ms(::google::protobuf::int64 value);

  // optional int64 lns_time_limit_ms = 10;
  void clear_lns_time_limit_ms();
  static const int kLnsTimeLimitMsFieldNumber = 10;
  ::google::protobuf::int64 lns_time_limit_ms() const;
  void set_lns_time_limit_ms(::google::protobuf::int64 value);

  // optional bool use_light_propagation = 11;
  void clear_use_light_propagation();
  static const int kUseLightPropagationFieldNumber = 11;
  bool use_light_propagation() const;
  void set_use_light_propagation(bool value);

  // optional bool fingerprint_arc_cost_evaluators = 12;
  void clear_fingerprint_arc_cost_evaluators();
  static const int kFingerprintArcCostEvaluatorsFieldNumber = 12;
  bool fingerprint_arc_cost_evaluators() const;
  void set_fingerprint_arc_cost_evaluators(bool value);

  // optional bool log_search = 13;
  void clear_log_search();
  static const int kLogSearchFieldNumber = 13;
  bool log_search() const;
  void set_log_search(bool value);

  // @@protoc_insertion_point(class_scope:operations_research.RoutingSearchParameters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int first_solution_strategy_;
  int local_search_metaheuristic_;
  ::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators* local_search_operators_;
  double guided_local_search_lambda_coefficient_;
  ::google::protobuf::int64 optimization_step_;
  ::google::protobuf::int64 solution_limit_;
  bool use_filtered_first_solution_strategy_;
  bool use_depth_first_search_;
  bool use_light_propagation_;
  bool fingerprint_arc_cost_evaluators_;
  bool log_search_;
  ::google::protobuf::int64 time_limit_ms_;
  ::google::protobuf::int64 lns_time_limit_ms_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_constraint_5fsolver_2frouting_5fparameters_2eproto();
  friend void protobuf_AssignDesc_constraint_5fsolver_2frouting_5fparameters_2eproto();
  friend void protobuf_ShutdownFile_constraint_5fsolver_2frouting_5fparameters_2eproto();

  void InitAsDefaultInstance();
  static RoutingSearchParameters* default_instance_;
};
// -------------------------------------------------------------------

class RoutingModelParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.RoutingModelParameters) */ {
 public:
  RoutingModelParameters();
  virtual ~RoutingModelParameters();

  RoutingModelParameters(const RoutingModelParameters& from);

  inline RoutingModelParameters& operator=(const RoutingModelParameters& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutingModelParameters& default_instance();

  void Swap(RoutingModelParameters* other);

  // implements Message ----------------------------------------------

  inline RoutingModelParameters* New() const { return New(NULL); }

  RoutingModelParameters* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoutingModelParameters& from);
  void MergeFrom(const RoutingModelParameters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoutingModelParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .operations_research.ConstraintSolverParameters solver_parameters = 1;
  bool has_solver_parameters() const;
  void clear_solver_parameters();
  static const int kSolverParametersFieldNumber = 1;
  const ::operations_research::ConstraintSolverParameters& solver_parameters() const;
  ::operations_research::ConstraintSolverParameters* mutable_solver_parameters();
  ::operations_research::ConstraintSolverParameters* release_solver_parameters();
  void set_allocated_solver_parameters(::operations_research::ConstraintSolverParameters* solver_parameters);

  // optional bool reduce_vehicle_cost_model = 2;
  void clear_reduce_vehicle_cost_model();
  static const int kReduceVehicleCostModelFieldNumber = 2;
  bool reduce_vehicle_cost_model() const;
  void set_reduce_vehicle_cost_model(bool value);

  // optional int32 max_callback_cache_size = 3;
  void clear_max_callback_cache_size();
  static const int kMaxCallbackCacheSizeFieldNumber = 3;
  ::google::protobuf::int32 max_callback_cache_size() const;
  void set_max_callback_cache_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:operations_research.RoutingModelParameters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::operations_research::ConstraintSolverParameters* solver_parameters_;
  bool reduce_vehicle_cost_model_;
  ::google::protobuf::int32 max_callback_cache_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_constraint_5fsolver_2frouting_5fparameters_2eproto();
  friend void protobuf_AssignDesc_constraint_5fsolver_2frouting_5fparameters_2eproto();
  friend void protobuf_ShutdownFile_constraint_5fsolver_2frouting_5fparameters_2eproto();

  void InitAsDefaultInstance();
  static RoutingModelParameters* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RoutingSearchParameters_LocalSearchNeighborhoodOperators

// optional bool use_relocate = 1;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_relocate() {
  use_relocate_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_relocate() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_relocate)
  return use_relocate_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_relocate(bool value) {
  
  use_relocate_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_relocate)
}

// optional bool use_relocate_pair = 2;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_relocate_pair() {
  use_relocate_pair_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_relocate_pair() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_relocate_pair)
  return use_relocate_pair_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_relocate_pair(bool value) {
  
  use_relocate_pair_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_relocate_pair)
}

// optional bool use_relocate_neighbors = 3;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_relocate_neighbors() {
  use_relocate_neighbors_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_relocate_neighbors() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_relocate_neighbors)
  return use_relocate_neighbors_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_relocate_neighbors(bool value) {
  
  use_relocate_neighbors_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_relocate_neighbors)
}

// optional bool use_exchange = 4;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_exchange() {
  use_exchange_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_exchange() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_exchange)
  return use_exchange_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_exchange(bool value) {
  
  use_exchange_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_exchange)
}

// optional bool use_cross = 5;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_cross() {
  use_cross_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_cross() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_cross)
  return use_cross_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_cross(bool value) {
  
  use_cross_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_cross)
}

// optional bool use_cross_exchange = 6;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_cross_exchange() {
  use_cross_exchange_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_cross_exchange() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_cross_exchange)
  return use_cross_exchange_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_cross_exchange(bool value) {
  
  use_cross_exchange_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_cross_exchange)
}

// optional bool use_two_opt = 7;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_two_opt() {
  use_two_opt_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_two_opt() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_two_opt)
  return use_two_opt_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_two_opt(bool value) {
  
  use_two_opt_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_two_opt)
}

// optional bool use_or_opt = 8;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_or_opt() {
  use_or_opt_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_or_opt() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_or_opt)
  return use_or_opt_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_or_opt(bool value) {
  
  use_or_opt_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_or_opt)
}

// optional bool use_lin_kernighan = 9;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_lin_kernighan() {
  use_lin_kernighan_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_lin_kernighan() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_lin_kernighan)
  return use_lin_kernighan_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_lin_kernighan(bool value) {
  
  use_lin_kernighan_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_lin_kernighan)
}

// optional bool use_tsp_opt = 10;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_tsp_opt() {
  use_tsp_opt_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_tsp_opt() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_tsp_opt)
  return use_tsp_opt_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_tsp_opt(bool value) {
  
  use_tsp_opt_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_tsp_opt)
}

// optional bool use_make_active = 11;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_make_active() {
  use_make_active_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_make_active() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_make_active)
  return use_make_active_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_make_active(bool value) {
  
  use_make_active_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_make_active)
}

// optional bool use_make_inactive = 12;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_make_inactive() {
  use_make_inactive_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_make_inactive() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_make_inactive)
  return use_make_inactive_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_make_inactive(bool value) {
  
  use_make_inactive_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_make_inactive)
}

// optional bool use_make_chain_inactive = 13;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_make_chain_inactive() {
  use_make_chain_inactive_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_make_chain_inactive() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_make_chain_inactive)
  return use_make_chain_inactive_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_make_chain_inactive(bool value) {
  
  use_make_chain_inactive_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_make_chain_inactive)
}

// optional bool use_swap_active = 14;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_swap_active() {
  use_swap_active_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_swap_active() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_swap_active)
  return use_swap_active_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_swap_active(bool value) {
  
  use_swap_active_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_swap_active)
}

// optional bool use_extended_swap_active = 15;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_extended_swap_active() {
  use_extended_swap_active_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_extended_swap_active() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_extended_swap_active)
  return use_extended_swap_active_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_extended_swap_active(bool value) {
  
  use_extended_swap_active_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_extended_swap_active)
}

// optional bool use_node_pair_swap_active = 20;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_node_pair_swap_active() {
  use_node_pair_swap_active_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_node_pair_swap_active() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_node_pair_swap_active)
  return use_node_pair_swap_active_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_node_pair_swap_active(bool value) {
  
  use_node_pair_swap_active_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_node_pair_swap_active)
}

// optional bool use_path_lns = 16;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_path_lns() {
  use_path_lns_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_path_lns() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_path_lns)
  return use_path_lns_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_path_lns(bool value) {
  
  use_path_lns_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_path_lns)
}

// optional bool use_full_path_lns = 17;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_full_path_lns() {
  use_full_path_lns_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_full_path_lns() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_full_path_lns)
  return use_full_path_lns_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_full_path_lns(bool value) {
  
  use_full_path_lns_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_full_path_lns)
}

// optional bool use_tsp_lns = 18;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_tsp_lns() {
  use_tsp_lns_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_tsp_lns() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_tsp_lns)
  return use_tsp_lns_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_tsp_lns(bool value) {
  
  use_tsp_lns_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_tsp_lns)
}

// optional bool use_inactive_lns = 19;
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::clear_use_inactive_lns() {
  use_inactive_lns_ = false;
}
inline bool RoutingSearchParameters_LocalSearchNeighborhoodOperators::use_inactive_lns() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_inactive_lns)
  return use_inactive_lns_;
}
inline void RoutingSearchParameters_LocalSearchNeighborhoodOperators::set_use_inactive_lns(bool value) {
  
  use_inactive_lns_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators.use_inactive_lns)
}

// -------------------------------------------------------------------

// RoutingSearchParameters

// optional .operations_research.FirstSolutionStrategy.Value first_solution_strategy = 1;
inline void RoutingSearchParameters::clear_first_solution_strategy() {
  first_solution_strategy_ = 0;
}
inline ::operations_research::FirstSolutionStrategy_Value RoutingSearchParameters::first_solution_strategy() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.first_solution_strategy)
  return static_cast< ::operations_research::FirstSolutionStrategy_Value >(first_solution_strategy_);
}
inline void RoutingSearchParameters::set_first_solution_strategy(::operations_research::FirstSolutionStrategy_Value value) {
  
  first_solution_strategy_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.first_solution_strategy)
}

// optional bool use_filtered_first_solution_strategy = 2;
inline void RoutingSearchParameters::clear_use_filtered_first_solution_strategy() {
  use_filtered_first_solution_strategy_ = false;
}
inline bool RoutingSearchParameters::use_filtered_first_solution_strategy() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.use_filtered_first_solution_strategy)
  return use_filtered_first_solution_strategy_;
}
inline void RoutingSearchParameters::set_use_filtered_first_solution_strategy(bool value) {
  
  use_filtered_first_solution_strategy_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.use_filtered_first_solution_strategy)
}

// optional .operations_research.RoutingSearchParameters.LocalSearchNeighborhoodOperators local_search_operators = 3;
inline bool RoutingSearchParameters::has_local_search_operators() const {
  return !_is_default_instance_ && local_search_operators_ != NULL;
}
inline void RoutingSearchParameters::clear_local_search_operators() {
  if (GetArenaNoVirtual() == NULL && local_search_operators_ != NULL) delete local_search_operators_;
  local_search_operators_ = NULL;
}
inline const ::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators& RoutingSearchParameters::local_search_operators() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.local_search_operators)
  return local_search_operators_ != NULL ? *local_search_operators_ : *default_instance_->local_search_operators_;
}
inline ::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators* RoutingSearchParameters::mutable_local_search_operators() {
  
  if (local_search_operators_ == NULL) {
    local_search_operators_ = new ::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.RoutingSearchParameters.local_search_operators)
  return local_search_operators_;
}
inline ::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators* RoutingSearchParameters::release_local_search_operators() {
  // @@protoc_insertion_point(field_release:operations_research.RoutingSearchParameters.local_search_operators)
  
  ::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators* temp = local_search_operators_;
  local_search_operators_ = NULL;
  return temp;
}
inline void RoutingSearchParameters::set_allocated_local_search_operators(::operations_research::RoutingSearchParameters_LocalSearchNeighborhoodOperators* local_search_operators) {
  delete local_search_operators_;
  local_search_operators_ = local_search_operators;
  if (local_search_operators) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:operations_research.RoutingSearchParameters.local_search_operators)
}

// optional .operations_research.LocalSearchMetaheuristic.Value local_search_metaheuristic = 4;
inline void RoutingSearchParameters::clear_local_search_metaheuristic() {
  local_search_metaheuristic_ = 0;
}
inline ::operations_research::LocalSearchMetaheuristic_Value RoutingSearchParameters::local_search_metaheuristic() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.local_search_metaheuristic)
  return static_cast< ::operations_research::LocalSearchMetaheuristic_Value >(local_search_metaheuristic_);
}
inline void RoutingSearchParameters::set_local_search_metaheuristic(::operations_research::LocalSearchMetaheuristic_Value value) {
  
  local_search_metaheuristic_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.local_search_metaheuristic)
}

// optional double guided_local_search_lambda_coefficient = 5;
inline void RoutingSearchParameters::clear_guided_local_search_lambda_coefficient() {
  guided_local_search_lambda_coefficient_ = 0;
}
inline double RoutingSearchParameters::guided_local_search_lambda_coefficient() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.guided_local_search_lambda_coefficient)
  return guided_local_search_lambda_coefficient_;
}
inline void RoutingSearchParameters::set_guided_local_search_lambda_coefficient(double value) {
  
  guided_local_search_lambda_coefficient_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.guided_local_search_lambda_coefficient)
}

// optional bool use_depth_first_search = 6;
inline void RoutingSearchParameters::clear_use_depth_first_search() {
  use_depth_first_search_ = false;
}
inline bool RoutingSearchParameters::use_depth_first_search() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.use_depth_first_search)
  return use_depth_first_search_;
}
inline void RoutingSearchParameters::set_use_depth_first_search(bool value) {
  
  use_depth_first_search_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.use_depth_first_search)
}

// optional int64 optimization_step = 7;
inline void RoutingSearchParameters::clear_optimization_step() {
  optimization_step_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoutingSearchParameters::optimization_step() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.optimization_step)
  return optimization_step_;
}
inline void RoutingSearchParameters::set_optimization_step(::google::protobuf::int64 value) {
  
  optimization_step_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.optimization_step)
}

// optional int64 solution_limit = 8;
inline void RoutingSearchParameters::clear_solution_limit() {
  solution_limit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoutingSearchParameters::solution_limit() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.solution_limit)
  return solution_limit_;
}
inline void RoutingSearchParameters::set_solution_limit(::google::protobuf::int64 value) {
  
  solution_limit_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.solution_limit)
}

// optional int64 time_limit_ms = 9;
inline void RoutingSearchParameters::clear_time_limit_ms() {
  time_limit_ms_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoutingSearchParameters::time_limit_ms() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.time_limit_ms)
  return time_limit_ms_;
}
inline void RoutingSearchParameters::set_time_limit_ms(::google::protobuf::int64 value) {
  
  time_limit_ms_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.time_limit_ms)
}

// optional int64 lns_time_limit_ms = 10;
inline void RoutingSearchParameters::clear_lns_time_limit_ms() {
  lns_time_limit_ms_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RoutingSearchParameters::lns_time_limit_ms() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.lns_time_limit_ms)
  return lns_time_limit_ms_;
}
inline void RoutingSearchParameters::set_lns_time_limit_ms(::google::protobuf::int64 value) {
  
  lns_time_limit_ms_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.lns_time_limit_ms)
}

// optional bool use_light_propagation = 11;
inline void RoutingSearchParameters::clear_use_light_propagation() {
  use_light_propagation_ = false;
}
inline bool RoutingSearchParameters::use_light_propagation() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.use_light_propagation)
  return use_light_propagation_;
}
inline void RoutingSearchParameters::set_use_light_propagation(bool value) {
  
  use_light_propagation_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.use_light_propagation)
}

// optional bool fingerprint_arc_cost_evaluators = 12;
inline void RoutingSearchParameters::clear_fingerprint_arc_cost_evaluators() {
  fingerprint_arc_cost_evaluators_ = false;
}
inline bool RoutingSearchParameters::fingerprint_arc_cost_evaluators() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.fingerprint_arc_cost_evaluators)
  return fingerprint_arc_cost_evaluators_;
}
inline void RoutingSearchParameters::set_fingerprint_arc_cost_evaluators(bool value) {
  
  fingerprint_arc_cost_evaluators_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.fingerprint_arc_cost_evaluators)
}

// optional bool log_search = 13;
inline void RoutingSearchParameters::clear_log_search() {
  log_search_ = false;
}
inline bool RoutingSearchParameters::log_search() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingSearchParameters.log_search)
  return log_search_;
}
inline void RoutingSearchParameters::set_log_search(bool value) {
  
  log_search_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingSearchParameters.log_search)
}

// -------------------------------------------------------------------

// RoutingModelParameters

// optional .operations_research.ConstraintSolverParameters solver_parameters = 1;
inline bool RoutingModelParameters::has_solver_parameters() const {
  return !_is_default_instance_ && solver_parameters_ != NULL;
}
inline void RoutingModelParameters::clear_solver_parameters() {
  if (GetArenaNoVirtual() == NULL && solver_parameters_ != NULL) delete solver_parameters_;
  solver_parameters_ = NULL;
}
inline const ::operations_research::ConstraintSolverParameters& RoutingModelParameters::solver_parameters() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingModelParameters.solver_parameters)
  return solver_parameters_ != NULL ? *solver_parameters_ : *default_instance_->solver_parameters_;
}
inline ::operations_research::ConstraintSolverParameters* RoutingModelParameters::mutable_solver_parameters() {
  
  if (solver_parameters_ == NULL) {
    solver_parameters_ = new ::operations_research::ConstraintSolverParameters;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.RoutingModelParameters.solver_parameters)
  return solver_parameters_;
}
inline ::operations_research::ConstraintSolverParameters* RoutingModelParameters::release_solver_parameters() {
  // @@protoc_insertion_point(field_release:operations_research.RoutingModelParameters.solver_parameters)
  
  ::operations_research::ConstraintSolverParameters* temp = solver_parameters_;
  solver_parameters_ = NULL;
  return temp;
}
inline void RoutingModelParameters::set_allocated_solver_parameters(::operations_research::ConstraintSolverParameters* solver_parameters) {
  delete solver_parameters_;
  solver_parameters_ = solver_parameters;
  if (solver_parameters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:operations_research.RoutingModelParameters.solver_parameters)
}

// optional bool reduce_vehicle_cost_model = 2;
inline void RoutingModelParameters::clear_reduce_vehicle_cost_model() {
  reduce_vehicle_cost_model_ = false;
}
inline bool RoutingModelParameters::reduce_vehicle_cost_model() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingModelParameters.reduce_vehicle_cost_model)
  return reduce_vehicle_cost_model_;
}
inline void RoutingModelParameters::set_reduce_vehicle_cost_model(bool value) {
  
  reduce_vehicle_cost_model_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingModelParameters.reduce_vehicle_cost_model)
}

// optional int32 max_callback_cache_size = 3;
inline void RoutingModelParameters::clear_max_callback_cache_size() {
  max_callback_cache_size_ = 0;
}
inline ::google::protobuf::int32 RoutingModelParameters::max_callback_cache_size() const {
  // @@protoc_insertion_point(field_get:operations_research.RoutingModelParameters.max_callback_cache_size)
  return max_callback_cache_size_;
}
inline void RoutingModelParameters::set_max_callback_cache_size(::google::protobuf::int32 value) {
  
  max_callback_cache_size_ = value;
  // @@protoc_insertion_point(field_set:operations_research.RoutingModelParameters.max_callback_cache_size)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace operations_research

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_constraint_5fsolver_2frouting_5fparameters_2eproto__INCLUDED
