// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sat/boolean_problem.proto

#ifndef PROTOBUF_sat_2fboolean_5fproblem_2eproto__INCLUDED
#define PROTOBUF_sat_2fboolean_5fproblem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace operations_research {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sat_2fboolean_5fproblem_2eproto();
void protobuf_AssignDesc_sat_2fboolean_5fproblem_2eproto();
void protobuf_ShutdownFile_sat_2fboolean_5fproblem_2eproto();

class BooleanAssignment;
class LinearBooleanConstraint;
class LinearBooleanProblem;
class LinearObjective;

// ===================================================================

class LinearBooleanConstraint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.LinearBooleanConstraint) */ {
 public:
  LinearBooleanConstraint();
  virtual ~LinearBooleanConstraint();

  LinearBooleanConstraint(const LinearBooleanConstraint& from);

  inline LinearBooleanConstraint& operator=(const LinearBooleanConstraint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinearBooleanConstraint& default_instance();

  void Swap(LinearBooleanConstraint* other);

  // implements Message ----------------------------------------------

  inline LinearBooleanConstraint* New() const { return New(NULL); }

  LinearBooleanConstraint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinearBooleanConstraint& from);
  void MergeFrom(const LinearBooleanConstraint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LinearBooleanConstraint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 literals = 1;
  int literals_size() const;
  void clear_literals();
  static const int kLiteralsFieldNumber = 1;
  ::google::protobuf::int32 literals(int index) const;
  void set_literals(int index, ::google::protobuf::int32 value);
  void add_literals(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      literals() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_literals();

  // repeated int64 coefficients = 2;
  int coefficients_size() const;
  void clear_coefficients();
  static const int kCoefficientsFieldNumber = 2;
  ::google::protobuf::int64 coefficients(int index) const;
  void set_coefficients(int index, ::google::protobuf::int64 value);
  void add_coefficients(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      coefficients() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_coefficients();

  // optional int64 lower_bound = 3;
  bool has_lower_bound() const;
  void clear_lower_bound();
  static const int kLowerBoundFieldNumber = 3;
  ::google::protobuf::int64 lower_bound() const;
  void set_lower_bound(::google::protobuf::int64 value);

  // optional int64 upper_bound = 4;
  bool has_upper_bound() const;
  void clear_upper_bound();
  static const int kUpperBoundFieldNumber = 4;
  ::google::protobuf::int64 upper_bound() const;
  void set_upper_bound(::google::protobuf::int64 value);

  // optional string name = 5 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:operations_research.LinearBooleanConstraint)
 private:
  inline void set_has_lower_bound();
  inline void clear_has_lower_bound();
  inline void set_has_upper_bound();
  inline void clear_has_upper_bound();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > literals_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > coefficients_;
  ::google::protobuf::int64 lower_bound_;
  ::google::protobuf::int64 upper_bound_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void  protobuf_AddDesc_sat_2fboolean_5fproblem_2eproto();
  friend void protobuf_AssignDesc_sat_2fboolean_5fproblem_2eproto();
  friend void protobuf_ShutdownFile_sat_2fboolean_5fproblem_2eproto();

  void InitAsDefaultInstance();
  static LinearBooleanConstraint* default_instance_;
};
// -------------------------------------------------------------------

class LinearObjective : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.LinearObjective) */ {
 public:
  LinearObjective();
  virtual ~LinearObjective();

  LinearObjective(const LinearObjective& from);

  inline LinearObjective& operator=(const LinearObjective& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinearObjective& default_instance();

  void Swap(LinearObjective* other);

  // implements Message ----------------------------------------------

  inline LinearObjective* New() const { return New(NULL); }

  LinearObjective* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinearObjective& from);
  void MergeFrom(const LinearObjective& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LinearObjective* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 literals = 1;
  int literals_size() const;
  void clear_literals();
  static const int kLiteralsFieldNumber = 1;
  ::google::protobuf::int32 literals(int index) const;
  void set_literals(int index, ::google::protobuf::int32 value);
  void add_literals(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      literals() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_literals();

  // repeated int64 coefficients = 2;
  int coefficients_size() const;
  void clear_coefficients();
  static const int kCoefficientsFieldNumber = 2;
  ::google::protobuf::int64 coefficients(int index) const;
  void set_coefficients(int index, ::google::protobuf::int64 value);
  void add_coefficients(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      coefficients() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_coefficients();

  // optional double offset = 3 [default = 0];
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  double offset() const;
  void set_offset(double value);

  // optional double scaling_factor = 4 [default = 1];
  bool has_scaling_factor() const;
  void clear_scaling_factor();
  static const int kScalingFactorFieldNumber = 4;
  double scaling_factor() const;
  void set_scaling_factor(double value);

  // @@protoc_insertion_point(class_scope:operations_research.LinearObjective)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_scaling_factor();
  inline void clear_has_scaling_factor();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > literals_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > coefficients_;
  double offset_;
  double scaling_factor_;
  friend void  protobuf_AddDesc_sat_2fboolean_5fproblem_2eproto();
  friend void protobuf_AssignDesc_sat_2fboolean_5fproblem_2eproto();
  friend void protobuf_ShutdownFile_sat_2fboolean_5fproblem_2eproto();

  void InitAsDefaultInstance();
  static LinearObjective* default_instance_;
};
// -------------------------------------------------------------------

class BooleanAssignment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.BooleanAssignment) */ {
 public:
  BooleanAssignment();
  virtual ~BooleanAssignment();

  BooleanAssignment(const BooleanAssignment& from);

  inline BooleanAssignment& operator=(const BooleanAssignment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BooleanAssignment& default_instance();

  void Swap(BooleanAssignment* other);

  // implements Message ----------------------------------------------

  inline BooleanAssignment* New() const { return New(NULL); }

  BooleanAssignment* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BooleanAssignment& from);
  void MergeFrom(const BooleanAssignment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BooleanAssignment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 literals = 1;
  int literals_size() const;
  void clear_literals();
  static const int kLiteralsFieldNumber = 1;
  ::google::protobuf::int32 literals(int index) const;
  void set_literals(int index, ::google::protobuf::int32 value);
  void add_literals(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      literals() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_literals();

  // @@protoc_insertion_point(class_scope:operations_research.BooleanAssignment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > literals_;
  friend void  protobuf_AddDesc_sat_2fboolean_5fproblem_2eproto();
  friend void protobuf_AssignDesc_sat_2fboolean_5fproblem_2eproto();
  friend void protobuf_ShutdownFile_sat_2fboolean_5fproblem_2eproto();

  void InitAsDefaultInstance();
  static BooleanAssignment* default_instance_;
};
// -------------------------------------------------------------------

class LinearBooleanProblem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.LinearBooleanProblem) */ {
 public:
  LinearBooleanProblem();
  virtual ~LinearBooleanProblem();

  LinearBooleanProblem(const LinearBooleanProblem& from);

  inline LinearBooleanProblem& operator=(const LinearBooleanProblem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LinearBooleanProblem& default_instance();

  void Swap(LinearBooleanProblem* other);

  // implements Message ----------------------------------------------

  inline LinearBooleanProblem* New() const { return New(NULL); }

  LinearBooleanProblem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LinearBooleanProblem& from);
  void MergeFrom(const LinearBooleanProblem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LinearBooleanProblem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 num_variables = 3;
  bool has_num_variables() const;
  void clear_num_variables();
  static const int kNumVariablesFieldNumber = 3;
  ::google::protobuf::int32 num_variables() const;
  void set_num_variables(::google::protobuf::int32 value);

  // repeated .operations_research.LinearBooleanConstraint constraints = 4;
  int constraints_size() const;
  void clear_constraints();
  static const int kConstraintsFieldNumber = 4;
  const ::operations_research::LinearBooleanConstraint& constraints(int index) const;
  ::operations_research::LinearBooleanConstraint* mutable_constraints(int index);
  ::operations_research::LinearBooleanConstraint* add_constraints();
  ::google::protobuf::RepeatedPtrField< ::operations_research::LinearBooleanConstraint >*
      mutable_constraints();
  const ::google::protobuf::RepeatedPtrField< ::operations_research::LinearBooleanConstraint >&
      constraints() const;

  // optional .operations_research.LinearObjective objective = 5;
  bool has_objective() const;
  void clear_objective();
  static const int kObjectiveFieldNumber = 5;
  const ::operations_research::LinearObjective& objective() const;
  ::operations_research::LinearObjective* mutable_objective();
  ::operations_research::LinearObjective* release_objective();
  void set_allocated_objective(::operations_research::LinearObjective* objective);

  // repeated string var_names = 6;
  int var_names_size() const;
  void clear_var_names();
  static const int kVarNamesFieldNumber = 6;
  const ::std::string& var_names(int index) const;
  ::std::string* mutable_var_names(int index);
  void set_var_names(int index, const ::std::string& value);
  void set_var_names(int index, const char* value);
  void set_var_names(int index, const char* value, size_t size);
  ::std::string* add_var_names();
  void add_var_names(const ::std::string& value);
  void add_var_names(const char* value);
  void add_var_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& var_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_var_names();

  // optional .operations_research.BooleanAssignment assignment = 7;
  bool has_assignment() const;
  void clear_assignment();
  static const int kAssignmentFieldNumber = 7;
  const ::operations_research::BooleanAssignment& assignment() const;
  ::operations_research::BooleanAssignment* mutable_assignment();
  ::operations_research::BooleanAssignment* release_assignment();
  void set_allocated_assignment(::operations_research::BooleanAssignment* assignment);

  // optional int32 original_num_variables = 8;
  bool has_original_num_variables() const;
  void clear_original_num_variables();
  static const int kOriginalNumVariablesFieldNumber = 8;
  ::google::protobuf::int32 original_num_variables() const;
  void set_original_num_variables(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:operations_research.LinearBooleanProblem)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_num_variables();
  inline void clear_has_num_variables();
  inline void set_has_objective();
  inline void clear_has_objective();
  inline void set_has_assignment();
  inline void clear_has_assignment();
  inline void set_has_original_num_variables();
  inline void clear_has_original_num_variables();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::operations_research::LinearBooleanConstraint > constraints_;
  ::operations_research::LinearObjective* objective_;
  ::google::protobuf::int32 num_variables_;
  ::google::protobuf::int32 original_num_variables_;
  ::google::protobuf::RepeatedPtrField< ::std::string> var_names_;
  ::operations_research::BooleanAssignment* assignment_;
  friend void  protobuf_AddDesc_sat_2fboolean_5fproblem_2eproto();
  friend void protobuf_AssignDesc_sat_2fboolean_5fproblem_2eproto();
  friend void protobuf_ShutdownFile_sat_2fboolean_5fproblem_2eproto();

  void InitAsDefaultInstance();
  static LinearBooleanProblem* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LinearBooleanConstraint

// repeated int32 literals = 1;
inline int LinearBooleanConstraint::literals_size() const {
  return literals_.size();
}
inline void LinearBooleanConstraint::clear_literals() {
  literals_.Clear();
}
inline ::google::protobuf::int32 LinearBooleanConstraint::literals(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanConstraint.literals)
  return literals_.Get(index);
}
inline void LinearBooleanConstraint::set_literals(int index, ::google::protobuf::int32 value) {
  literals_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.LinearBooleanConstraint.literals)
}
inline void LinearBooleanConstraint::add_literals(::google::protobuf::int32 value) {
  literals_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.LinearBooleanConstraint.literals)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LinearBooleanConstraint::literals() const {
  // @@protoc_insertion_point(field_list:operations_research.LinearBooleanConstraint.literals)
  return literals_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LinearBooleanConstraint::mutable_literals() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.LinearBooleanConstraint.literals)
  return &literals_;
}

// repeated int64 coefficients = 2;
inline int LinearBooleanConstraint::coefficients_size() const {
  return coefficients_.size();
}
inline void LinearBooleanConstraint::clear_coefficients() {
  coefficients_.Clear();
}
inline ::google::protobuf::int64 LinearBooleanConstraint::coefficients(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanConstraint.coefficients)
  return coefficients_.Get(index);
}
inline void LinearBooleanConstraint::set_coefficients(int index, ::google::protobuf::int64 value) {
  coefficients_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.LinearBooleanConstraint.coefficients)
}
inline void LinearBooleanConstraint::add_coefficients(::google::protobuf::int64 value) {
  coefficients_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.LinearBooleanConstraint.coefficients)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LinearBooleanConstraint::coefficients() const {
  // @@protoc_insertion_point(field_list:operations_research.LinearBooleanConstraint.coefficients)
  return coefficients_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LinearBooleanConstraint::mutable_coefficients() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.LinearBooleanConstraint.coefficients)
  return &coefficients_;
}

// optional int64 lower_bound = 3;
inline bool LinearBooleanConstraint::has_lower_bound() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LinearBooleanConstraint::set_has_lower_bound() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LinearBooleanConstraint::clear_has_lower_bound() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LinearBooleanConstraint::clear_lower_bound() {
  lower_bound_ = GOOGLE_LONGLONG(0);
  clear_has_lower_bound();
}
inline ::google::protobuf::int64 LinearBooleanConstraint::lower_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanConstraint.lower_bound)
  return lower_bound_;
}
inline void LinearBooleanConstraint::set_lower_bound(::google::protobuf::int64 value) {
  set_has_lower_bound();
  lower_bound_ = value;
  // @@protoc_insertion_point(field_set:operations_research.LinearBooleanConstraint.lower_bound)
}

// optional int64 upper_bound = 4;
inline bool LinearBooleanConstraint::has_upper_bound() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LinearBooleanConstraint::set_has_upper_bound() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LinearBooleanConstraint::clear_has_upper_bound() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LinearBooleanConstraint::clear_upper_bound() {
  upper_bound_ = GOOGLE_LONGLONG(0);
  clear_has_upper_bound();
}
inline ::google::protobuf::int64 LinearBooleanConstraint::upper_bound() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanConstraint.upper_bound)
  return upper_bound_;
}
inline void LinearBooleanConstraint::set_upper_bound(::google::protobuf::int64 value) {
  set_has_upper_bound();
  upper_bound_ = value;
  // @@protoc_insertion_point(field_set:operations_research.LinearBooleanConstraint.upper_bound)
}

// optional string name = 5 [default = ""];
inline bool LinearBooleanConstraint::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LinearBooleanConstraint::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LinearBooleanConstraint::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LinearBooleanConstraint::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LinearBooleanConstraint::name() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanConstraint.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinearBooleanConstraint::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:operations_research.LinearBooleanConstraint.name)
}
inline void LinearBooleanConstraint::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:operations_research.LinearBooleanConstraint.name)
}
inline void LinearBooleanConstraint::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:operations_research.LinearBooleanConstraint.name)
}
inline ::std::string* LinearBooleanConstraint::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:operations_research.LinearBooleanConstraint.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinearBooleanConstraint::release_name() {
  // @@protoc_insertion_point(field_release:operations_research.LinearBooleanConstraint.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinearBooleanConstraint::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:operations_research.LinearBooleanConstraint.name)
}

// -------------------------------------------------------------------

// LinearObjective

// repeated int32 literals = 1;
inline int LinearObjective::literals_size() const {
  return literals_.size();
}
inline void LinearObjective::clear_literals() {
  literals_.Clear();
}
inline ::google::protobuf::int32 LinearObjective::literals(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.LinearObjective.literals)
  return literals_.Get(index);
}
inline void LinearObjective::set_literals(int index, ::google::protobuf::int32 value) {
  literals_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.LinearObjective.literals)
}
inline void LinearObjective::add_literals(::google::protobuf::int32 value) {
  literals_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.LinearObjective.literals)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LinearObjective::literals() const {
  // @@protoc_insertion_point(field_list:operations_research.LinearObjective.literals)
  return literals_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LinearObjective::mutable_literals() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.LinearObjective.literals)
  return &literals_;
}

// repeated int64 coefficients = 2;
inline int LinearObjective::coefficients_size() const {
  return coefficients_.size();
}
inline void LinearObjective::clear_coefficients() {
  coefficients_.Clear();
}
inline ::google::protobuf::int64 LinearObjective::coefficients(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.LinearObjective.coefficients)
  return coefficients_.Get(index);
}
inline void LinearObjective::set_coefficients(int index, ::google::protobuf::int64 value) {
  coefficients_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.LinearObjective.coefficients)
}
inline void LinearObjective::add_coefficients(::google::protobuf::int64 value) {
  coefficients_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.LinearObjective.coefficients)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LinearObjective::coefficients() const {
  // @@protoc_insertion_point(field_list:operations_research.LinearObjective.coefficients)
  return coefficients_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LinearObjective::mutable_coefficients() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.LinearObjective.coefficients)
  return &coefficients_;
}

// optional double offset = 3 [default = 0];
inline bool LinearObjective::has_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LinearObjective::set_has_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LinearObjective::clear_has_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LinearObjective::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline double LinearObjective::offset() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearObjective.offset)
  return offset_;
}
inline void LinearObjective::set_offset(double value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:operations_research.LinearObjective.offset)
}

// optional double scaling_factor = 4 [default = 1];
inline bool LinearObjective::has_scaling_factor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LinearObjective::set_has_scaling_factor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LinearObjective::clear_has_scaling_factor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LinearObjective::clear_scaling_factor() {
  scaling_factor_ = 1;
  clear_has_scaling_factor();
}
inline double LinearObjective::scaling_factor() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearObjective.scaling_factor)
  return scaling_factor_;
}
inline void LinearObjective::set_scaling_factor(double value) {
  set_has_scaling_factor();
  scaling_factor_ = value;
  // @@protoc_insertion_point(field_set:operations_research.LinearObjective.scaling_factor)
}

// -------------------------------------------------------------------

// BooleanAssignment

// repeated int32 literals = 1;
inline int BooleanAssignment::literals_size() const {
  return literals_.size();
}
inline void BooleanAssignment::clear_literals() {
  literals_.Clear();
}
inline ::google::protobuf::int32 BooleanAssignment::literals(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.BooleanAssignment.literals)
  return literals_.Get(index);
}
inline void BooleanAssignment::set_literals(int index, ::google::protobuf::int32 value) {
  literals_.Set(index, value);
  // @@protoc_insertion_point(field_set:operations_research.BooleanAssignment.literals)
}
inline void BooleanAssignment::add_literals(::google::protobuf::int32 value) {
  literals_.Add(value);
  // @@protoc_insertion_point(field_add:operations_research.BooleanAssignment.literals)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BooleanAssignment::literals() const {
  // @@protoc_insertion_point(field_list:operations_research.BooleanAssignment.literals)
  return literals_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BooleanAssignment::mutable_literals() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.BooleanAssignment.literals)
  return &literals_;
}

// -------------------------------------------------------------------

// LinearBooleanProblem

// optional string name = 1 [default = ""];
inline bool LinearBooleanProblem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LinearBooleanProblem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LinearBooleanProblem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LinearBooleanProblem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LinearBooleanProblem::name() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanProblem.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinearBooleanProblem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:operations_research.LinearBooleanProblem.name)
}
inline void LinearBooleanProblem::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:operations_research.LinearBooleanProblem.name)
}
inline void LinearBooleanProblem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:operations_research.LinearBooleanProblem.name)
}
inline ::std::string* LinearBooleanProblem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:operations_research.LinearBooleanProblem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LinearBooleanProblem::release_name() {
  // @@protoc_insertion_point(field_release:operations_research.LinearBooleanProblem.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LinearBooleanProblem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:operations_research.LinearBooleanProblem.name)
}

// optional int32 num_variables = 3;
inline bool LinearBooleanProblem::has_num_variables() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LinearBooleanProblem::set_has_num_variables() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LinearBooleanProblem::clear_has_num_variables() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LinearBooleanProblem::clear_num_variables() {
  num_variables_ = 0;
  clear_has_num_variables();
}
inline ::google::protobuf::int32 LinearBooleanProblem::num_variables() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanProblem.num_variables)
  return num_variables_;
}
inline void LinearBooleanProblem::set_num_variables(::google::protobuf::int32 value) {
  set_has_num_variables();
  num_variables_ = value;
  // @@protoc_insertion_point(field_set:operations_research.LinearBooleanProblem.num_variables)
}

// repeated .operations_research.LinearBooleanConstraint constraints = 4;
inline int LinearBooleanProblem::constraints_size() const {
  return constraints_.size();
}
inline void LinearBooleanProblem::clear_constraints() {
  constraints_.Clear();
}
inline const ::operations_research::LinearBooleanConstraint& LinearBooleanProblem::constraints(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanProblem.constraints)
  return constraints_.Get(index);
}
inline ::operations_research::LinearBooleanConstraint* LinearBooleanProblem::mutable_constraints(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.LinearBooleanProblem.constraints)
  return constraints_.Mutable(index);
}
inline ::operations_research::LinearBooleanConstraint* LinearBooleanProblem::add_constraints() {
  // @@protoc_insertion_point(field_add:operations_research.LinearBooleanProblem.constraints)
  return constraints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::operations_research::LinearBooleanConstraint >*
LinearBooleanProblem::mutable_constraints() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.LinearBooleanProblem.constraints)
  return &constraints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::operations_research::LinearBooleanConstraint >&
LinearBooleanProblem::constraints() const {
  // @@protoc_insertion_point(field_list:operations_research.LinearBooleanProblem.constraints)
  return constraints_;
}

// optional .operations_research.LinearObjective objective = 5;
inline bool LinearBooleanProblem::has_objective() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LinearBooleanProblem::set_has_objective() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LinearBooleanProblem::clear_has_objective() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LinearBooleanProblem::clear_objective() {
  if (objective_ != NULL) objective_->::operations_research::LinearObjective::Clear();
  clear_has_objective();
}
inline const ::operations_research::LinearObjective& LinearBooleanProblem::objective() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanProblem.objective)
  return objective_ != NULL ? *objective_ : *default_instance_->objective_;
}
inline ::operations_research::LinearObjective* LinearBooleanProblem::mutable_objective() {
  set_has_objective();
  if (objective_ == NULL) {
    objective_ = new ::operations_research::LinearObjective;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.LinearBooleanProblem.objective)
  return objective_;
}
inline ::operations_research::LinearObjective* LinearBooleanProblem::release_objective() {
  // @@protoc_insertion_point(field_release:operations_research.LinearBooleanProblem.objective)
  clear_has_objective();
  ::operations_research::LinearObjective* temp = objective_;
  objective_ = NULL;
  return temp;
}
inline void LinearBooleanProblem::set_allocated_objective(::operations_research::LinearObjective* objective) {
  delete objective_;
  objective_ = objective;
  if (objective) {
    set_has_objective();
  } else {
    clear_has_objective();
  }
  // @@protoc_insertion_point(field_set_allocated:operations_research.LinearBooleanProblem.objective)
}

// repeated string var_names = 6;
inline int LinearBooleanProblem::var_names_size() const {
  return var_names_.size();
}
inline void LinearBooleanProblem::clear_var_names() {
  var_names_.Clear();
}
inline const ::std::string& LinearBooleanProblem::var_names(int index) const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanProblem.var_names)
  return var_names_.Get(index);
}
inline ::std::string* LinearBooleanProblem::mutable_var_names(int index) {
  // @@protoc_insertion_point(field_mutable:operations_research.LinearBooleanProblem.var_names)
  return var_names_.Mutable(index);
}
inline void LinearBooleanProblem::set_var_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:operations_research.LinearBooleanProblem.var_names)
  var_names_.Mutable(index)->assign(value);
}
inline void LinearBooleanProblem::set_var_names(int index, const char* value) {
  var_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:operations_research.LinearBooleanProblem.var_names)
}
inline void LinearBooleanProblem::set_var_names(int index, const char* value, size_t size) {
  var_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:operations_research.LinearBooleanProblem.var_names)
}
inline ::std::string* LinearBooleanProblem::add_var_names() {
  // @@protoc_insertion_point(field_add_mutable:operations_research.LinearBooleanProblem.var_names)
  return var_names_.Add();
}
inline void LinearBooleanProblem::add_var_names(const ::std::string& value) {
  var_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:operations_research.LinearBooleanProblem.var_names)
}
inline void LinearBooleanProblem::add_var_names(const char* value) {
  var_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:operations_research.LinearBooleanProblem.var_names)
}
inline void LinearBooleanProblem::add_var_names(const char* value, size_t size) {
  var_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:operations_research.LinearBooleanProblem.var_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LinearBooleanProblem::var_names() const {
  // @@protoc_insertion_point(field_list:operations_research.LinearBooleanProblem.var_names)
  return var_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LinearBooleanProblem::mutable_var_names() {
  // @@protoc_insertion_point(field_mutable_list:operations_research.LinearBooleanProblem.var_names)
  return &var_names_;
}

// optional .operations_research.BooleanAssignment assignment = 7;
inline bool LinearBooleanProblem::has_assignment() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LinearBooleanProblem::set_has_assignment() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LinearBooleanProblem::clear_has_assignment() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LinearBooleanProblem::clear_assignment() {
  if (assignment_ != NULL) assignment_->::operations_research::BooleanAssignment::Clear();
  clear_has_assignment();
}
inline const ::operations_research::BooleanAssignment& LinearBooleanProblem::assignment() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanProblem.assignment)
  return assignment_ != NULL ? *assignment_ : *default_instance_->assignment_;
}
inline ::operations_research::BooleanAssignment* LinearBooleanProblem::mutable_assignment() {
  set_has_assignment();
  if (assignment_ == NULL) {
    assignment_ = new ::operations_research::BooleanAssignment;
  }
  // @@protoc_insertion_point(field_mutable:operations_research.LinearBooleanProblem.assignment)
  return assignment_;
}
inline ::operations_research::BooleanAssignment* LinearBooleanProblem::release_assignment() {
  // @@protoc_insertion_point(field_release:operations_research.LinearBooleanProblem.assignment)
  clear_has_assignment();
  ::operations_research::BooleanAssignment* temp = assignment_;
  assignment_ = NULL;
  return temp;
}
inline void LinearBooleanProblem::set_allocated_assignment(::operations_research::BooleanAssignment* assignment) {
  delete assignment_;
  assignment_ = assignment;
  if (assignment) {
    set_has_assignment();
  } else {
    clear_has_assignment();
  }
  // @@protoc_insertion_point(field_set_allocated:operations_research.LinearBooleanProblem.assignment)
}

// optional int32 original_num_variables = 8;
inline bool LinearBooleanProblem::has_original_num_variables() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LinearBooleanProblem::set_has_original_num_variables() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LinearBooleanProblem::clear_has_original_num_variables() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LinearBooleanProblem::clear_original_num_variables() {
  original_num_variables_ = 0;
  clear_has_original_num_variables();
}
inline ::google::protobuf::int32 LinearBooleanProblem::original_num_variables() const {
  // @@protoc_insertion_point(field_get:operations_research.LinearBooleanProblem.original_num_variables)
  return original_num_variables_;
}
inline void LinearBooleanProblem::set_original_num_variables(::google::protobuf::int32 value) {
  set_has_original_num_variables();
  original_num_variables_ = value;
  // @@protoc_insertion_point(field_set:operations_research.LinearBooleanProblem.original_num_variables)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace operations_research

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sat_2fboolean_5fproblem_2eproto__INCLUDED
