// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: constraint_solver/search_limit.proto

#ifndef PROTOBUF_constraint_5fsolver_2fsearch_5flimit_2eproto__INCLUDED
#define PROTOBUF_constraint_5fsolver_2fsearch_5flimit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace operations_research {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_constraint_5fsolver_2fsearch_5flimit_2eproto();
void protobuf_AssignDesc_constraint_5fsolver_2fsearch_5flimit_2eproto();
void protobuf_ShutdownFile_constraint_5fsolver_2fsearch_5flimit_2eproto();

class SearchLimitParameters;

// ===================================================================

class SearchLimitParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:operations_research.SearchLimitParameters) */ {
 public:
  SearchLimitParameters();
  virtual ~SearchLimitParameters();

  SearchLimitParameters(const SearchLimitParameters& from);

  inline SearchLimitParameters& operator=(const SearchLimitParameters& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchLimitParameters& default_instance();

  void Swap(SearchLimitParameters* other);

  // implements Message ----------------------------------------------

  inline SearchLimitParameters* New() const { return New(NULL); }

  SearchLimitParameters* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchLimitParameters& from);
  void MergeFrom(const SearchLimitParameters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SearchLimitParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional int64 branches = 2;
  void clear_branches();
  static const int kBranchesFieldNumber = 2;
  ::google::protobuf::int64 branches() const;
  void set_branches(::google::protobuf::int64 value);

  // optional int64 failures = 3;
  void clear_failures();
  static const int kFailuresFieldNumber = 3;
  ::google::protobuf::int64 failures() const;
  void set_failures(::google::protobuf::int64 value);

  // optional int64 solutions = 4;
  void clear_solutions();
  static const int kSolutionsFieldNumber = 4;
  ::google::protobuf::int64 solutions() const;
  void set_solutions(::google::protobuf::int64 value);

  // optional bool smart_time_check = 5;
  void clear_smart_time_check();
  static const int kSmartTimeCheckFieldNumber = 5;
  bool smart_time_check() const;
  void set_smart_time_check(bool value);

  // optional bool cumulative = 6;
  void clear_cumulative();
  static const int kCumulativeFieldNumber = 6;
  bool cumulative() const;
  void set_cumulative(bool value);

  // @@protoc_insertion_point(class_scope:operations_research.SearchLimitParameters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int64 branches_;
  ::google::protobuf::int64 failures_;
  ::google::protobuf::int64 solutions_;
  bool smart_time_check_;
  bool cumulative_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_constraint_5fsolver_2fsearch_5flimit_2eproto();
  friend void protobuf_AssignDesc_constraint_5fsolver_2fsearch_5flimit_2eproto();
  friend void protobuf_ShutdownFile_constraint_5fsolver_2fsearch_5flimit_2eproto();

  void InitAsDefaultInstance();
  static SearchLimitParameters* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchLimitParameters

// optional int64 time = 1;
inline void SearchLimitParameters::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchLimitParameters::time() const {
  // @@protoc_insertion_point(field_get:operations_research.SearchLimitParameters.time)
  return time_;
}
inline void SearchLimitParameters::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:operations_research.SearchLimitParameters.time)
}

// optional int64 branches = 2;
inline void SearchLimitParameters::clear_branches() {
  branches_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchLimitParameters::branches() const {
  // @@protoc_insertion_point(field_get:operations_research.SearchLimitParameters.branches)
  return branches_;
}
inline void SearchLimitParameters::set_branches(::google::protobuf::int64 value) {
  
  branches_ = value;
  // @@protoc_insertion_point(field_set:operations_research.SearchLimitParameters.branches)
}

// optional int64 failures = 3;
inline void SearchLimitParameters::clear_failures() {
  failures_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchLimitParameters::failures() const {
  // @@protoc_insertion_point(field_get:operations_research.SearchLimitParameters.failures)
  return failures_;
}
inline void SearchLimitParameters::set_failures(::google::protobuf::int64 value) {
  
  failures_ = value;
  // @@protoc_insertion_point(field_set:operations_research.SearchLimitParameters.failures)
}

// optional int64 solutions = 4;
inline void SearchLimitParameters::clear_solutions() {
  solutions_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchLimitParameters::solutions() const {
  // @@protoc_insertion_point(field_get:operations_research.SearchLimitParameters.solutions)
  return solutions_;
}
inline void SearchLimitParameters::set_solutions(::google::protobuf::int64 value) {
  
  solutions_ = value;
  // @@protoc_insertion_point(field_set:operations_research.SearchLimitParameters.solutions)
}

// optional bool smart_time_check = 5;
inline void SearchLimitParameters::clear_smart_time_check() {
  smart_time_check_ = false;
}
inline bool SearchLimitParameters::smart_time_check() const {
  // @@protoc_insertion_point(field_get:operations_research.SearchLimitParameters.smart_time_check)
  return smart_time_check_;
}
inline void SearchLimitParameters::set_smart_time_check(bool value) {
  
  smart_time_check_ = value;
  // @@protoc_insertion_point(field_set:operations_research.SearchLimitParameters.smart_time_check)
}

// optional bool cumulative = 6;
inline void SearchLimitParameters::clear_cumulative() {
  cumulative_ = false;
}
inline bool SearchLimitParameters::cumulative() const {
  // @@protoc_insertion_point(field_get:operations_research.SearchLimitParameters.cumulative)
  return cumulative_;
}
inline void SearchLimitParameters::set_cumulative(bool value) {
  
  cumulative_ = value;
  // @@protoc_insertion_point(field_set:operations_research.SearchLimitParameters.cumulative)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace operations_research

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_constraint_5fsolver_2fsearch_5flimit_2eproto__INCLUDED
